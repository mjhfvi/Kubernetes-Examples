# source: https://www.digitalocean.com/community/tutorials/how-to-create-a-kubernetes-cluster-using-kubeadm-on-ubuntu-18-04
kubeadm - a CLI tool that will install and configure the various components of a cluster in a standard way.
kubelet - a system service/program that runs on all nodes and handles node-level operations.
kubectl - a CLI tool used for issuing commands to the cluster through its API Server.

# setup your OS
sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2 curl

# add google repository for kubernetes
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list

# update apt-get
apt-get update

# Disable local swap
sudo swapoff -a

# install docker
sudo apt install -y docker.io kubeadm kubectl kubelet

# change cgdriver to systemd (fix install error in kubeadm)
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

# enable the docker service
systemctl enable docker.service

# reload and restart systemctl
sudo systemctl daemon-reload
sudo systemctl restart docker

# start kubernetes host cluster
kubeadm init

# add node to kubernetes cluster host from the host setup
kubeadm join 192.168.50.71:6443 --token 0vx90x.5t0m2rjdhpcquxid \
    --discovery-token-ca-cert-hash sha256:4c0243e5ba36214e32bce1d572f1cf9bc1a1d1cf6e32ccef8b10defd4c256756

# check nodes on host
kubectl get nodes



# kubeadm reset pr clear up settings
kubeadm reset